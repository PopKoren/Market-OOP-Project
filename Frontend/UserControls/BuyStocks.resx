<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>