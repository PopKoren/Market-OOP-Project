<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>